{% extends 'layout.twig' %}

{% set columns2 = true %}
    
{% block extraHead %}
<link rel="stylesheet" type="text/css" href="/bower_components/jqplot-bower/dist/jquery.jqplot.css" />

<script language="javascript" type="text/javascript" src="/bower_components/jqplot-bower/dist/jquery.jqplot.js"></script>
<script type="text/javascript" src="/bower_components/jqplot-bower/dist/plugins/jqplot.barRenderer.js"></script>
<script type="text/javascript" src="/bower_components/jqplot-bower/dist/plugins/jqplot.highlighter.js"></script>
<script type="text/javascript" src="/bower_components/jqplot-bower/dist/plugins/jqplot.cursor.js"></script>
<script type="text/javascript" src="/bower_components/jqplot-bower/dist/plugins/jqplot.pointLabels.js"></script>
<script type="text/javascript" src="/bower_components/jqplot-bower/dist/plugins/jqplot.dateAxisRenderer.js"></script>
<script type="text/javascript" src="/bower_components/jqplot-bower/dist/plugins/jqplot.logAxisRenderer.js"></script>


{% endblock %}


{% block content %}
    
    <h3>Templom statisztikák</h3>    
    <div id="chart1" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>   
    <div id="chart2" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>
    <div id="chart4" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>
    
    <h3>Egyéb statisztikák</h3>
    <div id="chart5" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>

    <script>
    $(document).ready(function () {
        
    var grid = {
              drawBorder: false,
              shadow: false,
              // background: 'rgba(0,0,0,0)'  works to make transparent.
              background: 'white'
          };
    var highlighter = {
            show: true, 
            showLabel: true, 
            tooltipAxes: 'y',
            sizeAdjust: 7.5 , tooltipLocation : 'ne'
        };
    var legend = {
              show: true,
              renderer: $.jqplot.EnhancedLegendRenderer,
              placement: "insideGrid",
              labels: false,
              location: "ne",
              rowSpacing: "2px",
              rendererOptions: {
                  // set to true to replot when toggling series on/off
                  // set to an options object to pass in replot options.
                  seriesToggle: 'normal',
                  seriesToggleReplot: {resetAxes: true}
              }
          };
    var seriesDefaults = {
              showMarker: false
          };
        
    legend['labels'] = {{ s1.labels|json_encode()|raw }};   
    plot1 = $.jqplot("chart1", {{ s1.data|json_encode()|raw }}, {
        // Turns on animatino for all series in this plot.
        animate: true,
        // Will animate plot on calls to plot1.replot({resetAxes:true})
        animateReplot: true,
        seriesDefaults: seriesDefaults,
        title: 'Templomaink frissítettsége',
        series:[
            {
                pointLabels: {
                    show: true
                },
                renderer: $.jqplot.BarRenderer,
                showHighlight: false,
                yaxis: 'y2axis',
                rendererOptions: {
                    // Speed up the animation a little bit.
                    // This is a number of milliseconds.  
                    // Default for bar series is 3000.  
                    animation: {
                        speed: 2500
                    },
                    barWidth: 15,
                    barPadding: -15,
                    barMargin: 0,
                    highlightMouseOver: false
                }
            }, 
            {
                rendererOptions: {
                    // speed up the animation a little bit.
                    // This is a number of milliseconds.
                    // Default for a line series is 2500.
                    animation: {
                        speed: 2000
                    }
                }
            }
        ],
        axesDefaults: {
            pad: 0
        },
        axes: {
            // These options will set up the x axis like a category axis.
            xaxis: {
                tickInterval: 1,
                drawMajorGridlines: false,
                drawMinorGridlines: true,
                drawMajorTickMarks: false,
                rendererOptions: {
                    tickInset: 0.5,
                    minorTicks: 1
                }
            },
            yaxis: {
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    forceTickAt0: true
                }
            },
            y2axis: {
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    // align the ticks on the y2 axis with the y axis.
                    alignTicks: true,
                    forceTickAt0: true
                }
            }
        },
        highlighter: highlighter,
        legend: legend,
        grid: grid,
    });
   
   
   
   
   
    legend['labels'] = {{ s3.labels|json_encode()|raw }};   
    plot2 = $.jqplot("chart2", {{ s3.data|json_encode()|raw }}, {
        // Turns on animatino for all series in this plot.
        animate: true,
        // Will animate plot on calls to plot1.replot({resetAxes:true})
        animateReplot: true,
        seriesDefaults: seriesDefaults,
        title: 'Az elmúlt 12 hónap frissítései',
        series:[
            {
                pointLabels: {
                    show: true
                },
                renderer: $.jqplot.BarRenderer,
                showHighlight: false,
                yaxis: 'y2axis',
                rendererOptions: {
                    // Speed up the animation a little bit.
                    // This is a number of milliseconds.  
                    // Default for bar series is 3000.  
                    animation: {
                        speed: 2500
                    },
                    barWidth: 15,
                    barPadding: -15,
                    barMargin: 0,
                    highlightMouseOver: false
                }
            }, 
            {
                rendererOptions: {
                    // speed up the animation a little bit.
                    // This is a number of milliseconds.
                    // Default for a line series is 2500.
                    animation: {
                        speed: 2000
                    }
                }
            }
        ],
        axesDefaults: {
            pad: 0
        },
        axes: {
            // These options will set up the x axis like a category axis.
            xaxis: {
                label: "",                  
                renderer: $.jqplot.DateAxisRenderer,
                tickOptions:{formatString:'%Y.%m.'},
                tickInterval:'2 month',
                /*  min:dates[0],
                max:dates[dates.length-1],
                tickInterval: '1 day',                  
                */                  
             },
            yaxis: {
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    forceTickAt0: true
                }
            },
            y2axis: {
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    // align the ticks on the y2 axis with the y axis.
                    alignTicks: true,
                    forceTickAt0: true
                }
            }
        },
        highlighter: highlighter,
        legend: legend,
        grid: grid,
    });
   
   
   plot4 = $.jqplot("chart4", [{{ s4.data|json_encode()|raw }}], {
        // Turns on animatino for all series in this plot.
        animate: true,
        // Will animate plot on calls to plot1.replot({resetAxes:true})
        animateReplot: true,
        title: 'Felhasználónként mennyi templomot tartanak karban',      
        axesDefaults: {
            pad: 0
        },
        axes: {
            // These options will set up the x axis like a category axis.
            xaxis: {
                label: 'Gondozott templomok száma',
                renderer: $.jqplot.LogAxisRenderer,
                tickInterval: 100,
                drawMajorGridlines: true,
                drawMinorGridlines: true,
                drawMajorTickMarks: true,
                rendererOptions: {
                    tickInset: 0.5,
                    minorTicks: 1,                
                }
            },
            yaxis: {
                label: "Felhasználók száma",
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    forceTickAt0: true
                }

            }
        },
        highlighter: highlighter,
        grid: grid,
    });
   
    
      var data = {{ s5.data|json_encode()|raw }};
      legend['labels'] = {{ s5.labels|json_encode()|raw }};

      // make the plot
      plot5 = $.jqplot("chart5", data, {
          title: "Külső API-khoz intézett lekérések",
          animate: true,
          axesDefaults: {
               labelRenderer: $.jqplot.CanvasAxisLabelRenderer 
          },
          seriesDefaults: seriesDefaults,
          legend: legend,
          axes: {
              xaxis: {
                label: "",                  
                renderer: $.jqplot.DateAxisRenderer,
                tickOptions:{formatString:'%Y.%m.%d.'},
                tickInterval:'1 day',
                /*  min:dates[0],
                max:dates[dates.length-1],
                tickInterval: '1 day',                  
                */                  
              },
              yaxis: {
                  label: '',                 
              }
          },
          grid: grid,
          legend: legend,
          highlighter: highlighter,
      });

});




    </script>
    {% endblock%}